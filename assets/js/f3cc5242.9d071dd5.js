"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[6043],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,v=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(v,i(i({ref:t},p),{},{components:n})):r.createElement(v,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i="Overview",l={unversionedId:"neutron/token-generation-event/airdrop/overview",id:"neutron/token-generation-event/airdrop/overview",title:"Overview",description:"This is a cw-tokens/cw20-merkle-airdrop-contract with several patches:",source:"@site/docs/neutron/token-generation-event/airdrop/overview.md",sourceDirName:"neutron/token-generation-event/airdrop",slug:"/neutron/token-generation-event/airdrop/overview",permalink:"/neutron/token-generation-event/airdrop/overview",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/neutron/token-generation-event/overview"},next:{title:"Messages",permalink:"/neutron/token-generation-event/airdrop/messages"}},c={},s=[],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"This is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-tokens/tree/main/contracts/cw20-merkle-airdrop"},"cw-tokens/cw20-merkle-airdrop-contract")," with several patches:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"removed native token distribution functionality;"),(0,o.kt)("li",{parentName:"ul"},"removed ",(0,o.kt)("inlineCode",{parentName:"li"},"burn"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"burn_all")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"withdraw")," ExecuteMsg's;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"claim")," patched to issue ",(0,o.kt)("inlineCode",{parentName:"li"},"AddVesting")," message to credits contract;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"withdraw_all")," patched to burn cNTRN tokens and send (received in exchange for burning) NTRN tokens to reserve contract. ",(0,o.kt)("inlineCode",{parentName:"li"},"withdraw_all")," can only be called after 3 months after the end of the event;"),(0,o.kt)("li",{parentName:"ul"},"stages logic removed, since we will only need one airdrop stage, also merged register merkle tree and instantiate messages into one;"),(0,o.kt)("li",{parentName:"ul"},"unified owner logic, similar to other TGE contracts;"),(0,o.kt)("li",{parentName:"ul"},"tests moved to separate file;"),(0,o.kt)("li",{parentName:"ul"},"enforced start/expiration logic to accept only timestamps, since blocks will break vesting logic.")))}u.isMDXComponent=!0}}]);