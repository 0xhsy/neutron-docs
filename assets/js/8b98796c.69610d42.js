"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[2317],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8834:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const a={},i="Queries",l={unversionedId:"neutron/token-generation-event/airdrop/queries",id:"neutron/token-generation-event/airdrop/queries",title:"Queries",description:"config",source:"@site/docs/neutron/token-generation-event/airdrop/queries.md",sourceDirName:"neutron/token-generation-event/airdrop",slug:"/neutron/token-generation-event/airdrop/queries",permalink:"/neutron/token-generation-event/airdrop/queries",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Messages",permalink:"/neutron/token-generation-event/airdrop/messages"},next:{title:"Overview",permalink:"/neutron/token-generation-event/auction/overview"}},c={},u=[{value:"<code>config</code>",id:"config",level:2},{value:"<code>merkle_root</code>",id:"merkle_root",level:2},{value:"<code>is_claimed</code>",id:"is_claimed",level:2},{value:"<code>total_claimed</code>",id:"total_claimed",level:2},{value:"<code>is_paused</code>",id:"is_paused",level:2}],s={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"queries"},"Queries"),(0,o.kt)("h2",{id:"config"},(0,o.kt)("inlineCode",{parentName:"h2"},"config")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "config": {}\n}\n')),(0,o.kt)("p",null,"Returns info about contract's configuration"),(0,o.kt)("h2",{id:"merkle_root"},(0,o.kt)("inlineCode",{parentName:"h2"},"merkle_root")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "merkle_root": {}\n}\n')),(0,o.kt)("p",null,"Returns merkle root of the Airdrop contract."),(0,o.kt)("h2",{id:"is_claimed"},(0,o.kt)("inlineCode",{parentName:"h2"},"is_claimed")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "is_claimed": {\n    "address": "neutron..."\n  }\n}\n')),(0,o.kt)("p",null,"Returns true if a given address already claimed the airdrop."),(0,o.kt)("h2",{id:"total_claimed"},(0,o.kt)("inlineCode",{parentName:"h2"},"total_claimed")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "total_claimed": {}\n}\n')),(0,o.kt)("p",null,"Returns total amount of already claimed tokens by users."),(0,o.kt)("h2",{id:"is_paused"},(0,o.kt)("inlineCode",{parentName:"h2"},"is_paused")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "is_paused": {}\n}\n')),(0,o.kt)("p",null,"Returns true of the contract is on pause."))}p.isMDXComponent=!0}}]);