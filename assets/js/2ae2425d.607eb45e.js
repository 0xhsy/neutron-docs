"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[3311],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=m(n),c=a,g=u["".concat(s,".").concat(c)]||u[c]||p[c]||o;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const o={},i="Messages",l={unversionedId:"3rdparty/osmosis/tokenfactory/messages",id:"3rdparty/osmosis/tokenfactory/messages",title:"Messages",description:"CreateDenom",source:"@site/docs/3rdparty/osmosis/tokenfactory/messages.md",sourceDirName:"3rdparty/osmosis/tokenfactory",slug:"/3rdparty/osmosis/tokenfactory/messages",permalink:"/3rdparty/osmosis/tokenfactory/messages",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/3rdparty/osmosis/tokenfactory/overview"},next:{title:"Overview",permalink:"/3rdparty/osmosis/ibc-hooks/overview"}},s={},m=[{value:"CreateDenom",id:"createdenom",level:3},{value:"Mint",id:"mint",level:3},{value:"Burn",id:"burn",level:3}],d={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"messages"},"Messages"),(0,a.kt)("h3",{id:"createdenom"},"CreateDenom"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Creates a denom of ",(0,a.kt)("inlineCode",{parentName:"li"},"factory/{creator address}/{subdenom}")," given the denom creator address and the subdenom. Subdenoms can contain ",(0,a.kt)("inlineCode",{parentName:"li"},"[a-zA-Z0-9./]"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{.go}"},'message MsgCreateDenom {\n  string sender = 1 [ (gogoproto.moretags) = "yaml:\\"sender\\"" ];\n  string subdenom = 2 [ (gogoproto.moretags) = "yaml:\\"subdenom\\"" ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"State Modifications:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fund community pool with the denom creation fee from the creator address, set in ",(0,a.kt)("inlineCode",{parentName:"li"},"Params")),(0,a.kt)("li",{parentName:"ul"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"DenomMetaData")," via bank keeper"),(0,a.kt)("li",{parentName:"ul"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"AuthorityMetadata")," for the given denom to store the admin for the created denom ",(0,a.kt)("inlineCode",{parentName:"li"},"factory/{creator address}/{subdenom}"),". Admin is automatically set as the Msg sender"),(0,a.kt)("li",{parentName:"ul"},"Add denom to the ",(0,a.kt)("inlineCode",{parentName:"li"},"CreatorPrefixStore"),", where a state of denoms created per creator is kept")),(0,a.kt)("h3",{id:"mint"},"Mint"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Minting of a specific denom is only allowed for the creator of the denom registered during ",(0,a.kt)("inlineCode",{parentName:"li"},"CreateDenom"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{.go}"},'message MsgMint {\n  string sender = 1 [ (gogoproto.moretags) = "yaml:\\"sender\\"" ];\n  cosmos.base.v1beta1.Coin amount = 2 [\n    (gogoproto.moretags) = "yaml:\\"amount\\"",\n    (gogoproto.nullable) = false\n  ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"State Modifications:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Safety check the following",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Check that the denom minting is created via ",(0,a.kt)("inlineCode",{parentName:"li"},"tokenfactory")," module"),(0,a.kt)("li",{parentName:"ul"},"Check that the sender of the message is the admin of the denom"))),(0,a.kt)("li",{parentName:"ul"},"Mint designated amount of tokens for the denom via ",(0,a.kt)("inlineCode",{parentName:"li"},"bank")," module")),(0,a.kt)("h3",{id:"burn"},"Burn"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Burning of a specific denom is only allowed for the creator of the denom registered during ",(0,a.kt)("inlineCode",{parentName:"li"},"CreateDenom"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{.go}"},'message MsgBurn {\n  string sender = 1 [ (gogoproto.moretags) = "yaml:\\"sender\\"" ];\n  cosmos.base.v1beta1.Coin amount = 2 [\n    (gogoproto.moretags) = "yaml:\\"amount\\"",\n    (gogoproto.nullable) = false\n  ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"State Modifications:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Saftey check the following",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Check that the denom minting is created via ",(0,a.kt)("inlineCode",{parentName:"li"},"tokenfactory")," module"),(0,a.kt)("li",{parentName:"ul"},"Check that the sender of the message is the admin of the denom"))),(0,a.kt)("li",{parentName:"ul"},"Burn designated amount of tokens for the denom via ",(0,a.kt)("inlineCode",{parentName:"li"},"bank")," module")))}p.isMDXComponent=!0}}]);